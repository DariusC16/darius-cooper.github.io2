//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
    // SHOULD TAKE AN OBJECT AND RETURN ITS VALUES IN ARRAY 
     return Object.values(object);

} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) { 
    // INITALIZNG VARIABLE
     var result = "";

     // SHOULD TAKE AN OBJECT AND RETURN ALL ITS KEYS IN A STRING EACH SEPERATED WITH A SPACE
      result = Object.keys(object);

      // USING JOIN METHOD TO TRANSFORM ARRAY OF KEYS INTO STRINGS
       return result.join(" ");      

}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
    // INTIALIZING VARIABLE
     var result = "";

     // SHOULD TAKE AN OBJECT AND RETURN ALL IT'S STRING VALUES IN A STRING EACH SEPERATED WITH A SPACE
      result = Object.values(object);

      // USING JOIN METHOD TO TRANSFORM ARRAY OF VALUES INTO STRINGS
       return result.join(" ");
    
}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
    // SHOULD TAKE ONE ARGUMENT AND // RETURN 'array' IF ITS AN ARRAY AND 'object' IF ITS AN OBJECT
     // IF ITS AN ARRAY
      if (Array.isArray(collection)) {
        // RETURN 'array'
         return 'array';
      } // IF ITS AN OBJECT 
      else if (typeof collection === 'object') {
            // RETURN 'object'
             return 'object';
      } else {
        return collection;
      }
    
}

//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
    // SHOULD TAKE A STRING OF ONE WORD, AND RETURN THE WORD WITH ITS FIRST LETTER CAPITALIZED
     return string.charAt().toUpperCase() + string.slice(1);
    
}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
  // SHOULD TAKE A STRING OF WORDS AND RETURN A STRING WITH ALL THE WRDS CAPITALIZED
   // USING SPLIT METHOD TO TURN STRINGS INTO AN ARRAY
    string = string.split(" ");
    
    // USING FOR LOOP
     for (var i = 0; i <= string.length - 1; i++) {
      string[i] = string[i].charAt().toUpperCase() + string[i].slice(1)
     }

     // RETURNING STRING
      return string.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
  

}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {

}

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {

}

//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {

}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {

}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {

}

//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {

}

//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {

}

//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {

}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {

}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}